"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ request_modify –∏ response_modify
"""
from playwright.async_api import async_playwright
from standard_open_inflation_package import NetworkInterceptor, Handler, Execute, Request, Response
import asyncio
import json

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
request_counter = 0
response_counter = 0


def auth_request_modifier(request: Request) -> Request:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∫ –∑–∞–ø—Ä–æ—Å–∞–º"""
    global request_counter
    request_counter += 1
    
    print(f"üîê [AUTH] –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ #{request_counter}: {request.method.value} {request.url}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    request.add_header("Authorization", "Bearer demo-token-123")
    request.add_header("X-Request-ID", f"req-{request_counter}")
    
    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    return request


def tracking_request_modifier(request: Request) -> Request:
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–∫–∏–Ω–≥ –∫ –∑–∞–ø—Ä–æ—Å–∞–º"""
    print(f"üìä [TRACKING] –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞: {request.url}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–µ–∫–∏–Ω–≥–∞
    request.add_param("utm_source", "interceptor")
    request.add_param("session_id", "demo-session-456")
    
    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–µ–∫–∏–Ω–≥–∞")
    print(f"   üîó –ò—Ç–æ–≥–æ–≤—ã–π URL: {request.real_url}")
    return request


def security_response_modifier(response: Response) -> Response:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫ –æ—Ç–≤–µ—Ç–∞–º"""
    global response_counter
    response_counter += 1
    
    print(f"üõ°Ô∏è [SECURITY] –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ #{response_counter}: {response.status} –æ—Ç {response.url}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    security_headers = {
        "X-Content-Type-Options": "nosniff",
        "X-Frame-Options": "DENY",
        "X-XSS-Protection": "1; mode=block",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Response-Modified": "true",
        "X-Modification-Count": str(response_counter)
    }
    
    response.response_headers.update(security_headers)
    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã {len(security_headers)} –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    return response


async def analytics_response_modifier(response: Response) -> Response:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    print(f"üìà [ANALYTICS] –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞: {response.url}")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–∞ –º–µ—Ç—Ä–∏–∫)
    await asyncio.sleep(0.01)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
    response.response_headers["X-Analytics-Processed"] = "true"
    response.response_headers["X-Processing-Time"] = "0.01s"
    
    print(f"   ‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ")
    return response


async def demo_multiple_handlers():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤\n")
    
    async with async_playwright() as pw:
        browser = await pw.firefox.launch(headless=True)
        page = await browser.new_page()
        
        interceptor = NetworkInterceptor(page)
        interceptor._logger.setLevel("WARNING")  # –£–º–µ–Ω—å—à–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –≤—ã–≤–æ–¥–∞
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏
        
        # 1. –•–µ–Ω–¥–ª–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ - –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å—ã
        auth_handler = Handler.ALL(
            slug="auth_handler",
            execute=Execute.ALL(
                request_modify=auth_request_modifier,
                max_modifications=3,
                max_responses=1
            )
        )
        
        # 2. –•–µ–Ω–¥–ª–µ—Ä —Ç—Ä–µ–∫–∏–Ω–≥–∞ - –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã  
        tracking_handler = Handler.ALL(
            slug="tracking_handler",
            execute=Execute.ALL(
                request_modify=tracking_request_modifier,
                max_modifications=3,
                max_responses=1
            )
        )
        
        # 3. –•–µ–Ω–¥–ª–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç—ã
        security_handler = Handler.ALL(
            slug="security_handler", 
            execute=Execute.ALL(
                response_modify=security_response_modifier,
                max_modifications=3,
                max_responses=1
            )
        )
        
        # 4. –•–µ–Ω–¥–ª–µ—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã
        analytics_handler = Handler.ALL(
            slug="analytics_handler",
            execute=Execute.ALL(
                response_modify=analytics_response_modifier,
                max_modifications=3,
                max_responses=1
            )
        )
        
        print("üìã –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã:")
        print("   üîê auth_handler - –¥–æ–±–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫ –∑–∞–ø—Ä–æ—Å–∞–º")
        print("   üìä tracking_handler - –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–∫–∏–Ω–≥ –∫ –∑–∞–ø—Ä–æ—Å–∞–º")
        print("   üõ°Ô∏è security_handler - –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫ –æ—Ç–≤–µ—Ç–∞–º")
        print("   üìà analytics_handler - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã")
        print()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏
        print("üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ https://httpbin.org/get")
        print("=" * 60)
        
        results, _ = await asyncio.gather(
            interceptor.execute([auth_handler, tracking_handler, security_handler, analytics_handler]),
            page.goto("https://httpbin.org/get")
        )
        
        await browser.close()
        
        print("=" * 60)
        print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
        print(f"   üì• –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {request_counter}")
        print(f"   üì§ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤: {response_counter}")
        print(f"   üéØ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤: {len(results)}")
        print()
        
        for i, result in enumerate(results, 1):
            if hasattr(result, 'responses'):
                print(f"   ‚úÖ –•–µ–Ω–¥–ª–µ—Ä {i} ({result.handler_slug}): {len(result.responses)} –æ—Ç–≤–µ—Ç–æ–≤ –∑–∞ {result.duration:.2f}—Å")
            else:
                print(f"   ‚ùå –•–µ–Ω–¥–ª–µ—Ä {i} ({result.handler_slug}): –æ—à–∏–±–∫–∞ –∑–∞ {result.duration:.2f}—Å")
        
        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")


async def demo_simple_modification():
    """–ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("\n" + "=" * 60)
    print("üîß –ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞")
    print("=" * 60)
    
    def simple_request_mod(request: Request) -> Request:
        print(f"üìù –ü—Ä–æ—Å—Ç–∞—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞: –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä 'demo=true'")
        request.add_param("demo", "true")
        return request
    
    def simple_response_mod(response: Response) -> Response:
        print(f"üìù –ü—Ä–æ—Å—Ç–∞—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞: –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ 'X-Demo=true'")
        response.response_headers["X-Demo"] = "true"
        return response
    
    async with async_playwright() as pw:
        browser = await pw.firefox.launch(headless=True)
        page = await browser.new_page()
        
        interceptor = NetworkInterceptor(page)
        interceptor._logger.setLevel("ERROR")
        
        simple_handler = Handler.ALL(execute=Execute.ALL(
            request_modify=simple_request_mod,
            response_modify=simple_response_mod,
            max_modifications=1,
            max_responses=1
        ))
        
        results, _ = await asyncio.gather(
            interceptor.execute(simple_handler),
            page.goto("https://httpbin.org/get")
        )
        
        await browser.close()
        
        print(f"‚úÖ –ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç(–æ–≤)")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ NetworkInterceptor")
    print("=" * 60)
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
    await demo_simple_modification()
    
    # –ó–∞—Ç–µ–º —Å–ª–æ–∂–Ω–∞—è —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏
    await demo_multiple_handlers()
    
    print("\nüèÅ –í—Å–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("\nüí° –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
    print("   ‚Ä¢ –ó–∞–ø—Ä–æ—Å—ã –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—é—Ç—Å—è –ü–ï–†–ï–î –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
    print("   ‚Ä¢ –û—Ç–≤–µ—Ç—ã –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—é—Ç—Å—è –ü–û–°–õ–ï –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
    print("   ‚Ä¢ –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ø–∞–¥–∞—é—Ç –≤ –±—Ä–∞—É–∑–µ—Ä")
    print("   ‚Ä¢ –ù–µ—Å–∫–æ–ª—å–∫–æ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ")
    print("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –∫–∞–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ, —Ç–∞–∫ –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏")


if __name__ == "__main__":
    asyncio.run(main())
