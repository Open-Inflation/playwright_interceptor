#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—Ö–≤–∞—Ç–∞ –í–°–ï–• HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
"""

import asyncio
import time
from standard_open_inflation_package import BaseAPI, Handler, Response, HandlerSearchFailedError
from io import BytesIO


async def main():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞—Ö–≤–∞—Ç –í–°–ï–• –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Å–ª–æ–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
    api = BaseAPI(timeout=10.0)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º timeout –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    await api.new_session()
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞—Ö–≤–∞—Ç –í–°–ï–• –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –†–ï–ê–õ–¨–ù–û —Å–ª–æ–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Handler.ANY() –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –õ–Æ–ë–û–ì–û –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    # –≠—Ç–æ –ø–æ–∫–∞–∂–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö
    start_time = time.time()
    
    # YouTube –≥–ª–∞–≤–Ω–∞—è - –æ–∫–æ–ª–æ 70+ –∑–∞–ø—Ä–æ—Å–æ–≤!
    complex_url = "https://chromedevtools.github.io/devtools-protocol/"
    
    result = await api.new_direct_fetch(complex_url, handler=Handler.TEXT())

    if isinstance(result, HandlerSearchFailedError):
        for i in result.rejected_responses:
            typpe = type(i.response)
            size = len(str(i.response)) if isinstance(i.response, (str, bytes, dict, list)) else 0
            if typpe is BytesIO:
                size = i.response.getbuffer().nbytes if hasattr(i.response, 'getbuffer') else 0
            type_name = typpe.__name__
            content_type = i.response_headers.get('content-type', 'unknown')
            print(f"{i.duration:6.1f}s | {i.status:3} | {content_type[:30]:<30} | Size: {size:<8} | {type_name:<15}")
    else:
        print(f"Response: {result.response}...")


if __name__ == "__main__":
    asyncio.run(main())
